# Plugins
# ───────
source "%val{config}/plugins/plug.kak/rc/plug.kak"
# So that plug-clean does not remove plug.kak
plug "andreyorst/plug.kak" noload

# Dependency of auto-pairs
plug "alexherbo2/prelude.kak"

# Auto close {}, (), etc.
plug "alexherbo2/auto-pairs.kak" %{
   require-module prelude
   require-module auto-pairs
   auto-pairs-enable
}

# LSP server
plug "kak-lsp/kak-lsp" do %{
   cargo install --release --locked
   cargo install --force --path .
}

# Better buffer management
plug "delapouite/kakoune-buffers" %{
    map global normal b ': enter-buffers-mode<ret>' -docstring 'buffers'
    map global normal B ': enter-user-mode -lock buffers<ret>' -docstring 'buffers (lock)'
}

# Open file at last edit
plug "Screwtapello/kakoune-state-save" domain "gitlab.com"

# UI configuration
# ────────────────
set-option global tabstop 3		# Width of a tab
set-option global indentwidth 3	# Indent with 3 spaces
set-option global scrolloff 99,3	# Center cursor
set-option global ui_options ncurses_assistant=off # Disable clippy
set-option global autoreload yes # Live reload
set-option global writemethod replace # Live reload method

# Global highlighters
add-highlighter global/ show-matching
# add-highlighter global/ number-lines -relative -separator '  ' # Line numbers
#add-highlighter global/ wrap -word -indent -marker ↳
#add-highlighter global/ regex \h+$ 0:Error	# Highlight trailing whitespace

# Line numbers (hook so I have more control)
hook global WinCreate ^[^*]+$ %{ add-highlighter window/ number-lines -relative -separator '  ' }

# Buffer list
hook global WinDisplay .* info-buffers

# Theme
# ─────

# Colorscheme
colorscheme lena

# Change selection color based on mode
set-face global PrimarySelection white,rgba:5C8CDC80+F
set-face global SecondarySelection black,rgba:86A7E040+F
set-face global PrimaryCursor white,rgb:8C56EB+F
set-face global SecondaryCursor black,rgb:AE8DEB+F
set-face global PrimaryCursorEol black,rgb:DB4979
set-face global SecondaryCursorEol black,rgb:E084A3

hook global ModeChange ".*:insert" %{
set-face window PrimarySelection white,rgb:5C8CDC+F
	set-face window SecondarySelection black,rgb:86A7E0+F
	set-face window PrimaryCursor white,rgb:4CD0A0+F
	set-face window SecondaryCursor black,rgb:94DCC2+F
	set-face window PrimaryCursorEol black,rgb:677a8f
	set-face window SecondaryCursorEol black,rgb:4F6074
}

hook global ModeChange ".*:normal" %{
	unset-face window PrimarySelection
	unset-face window SecondarySelection
	unset-face window PrimaryCursor
	unset-face window SecondaryCursor
	unset-face window PrimaryCursorEol
	unset-face window SecondaryCursorEol
}

# Keyboard mappings
# ─────────────────
 
# Colemak bindings
map global normal n h
map global normal N H
map global normal e j
map global normal E J
map global normal i k
map global normal I K
map global normal o l
map global normal O L
map global normal h i

# Remap displaced keys
map global normal H I
map global normal j e
map global normal J E
map global normal k n
map global normal K N
map global normal l o
map global normal L O

map global normal <a-h> <a-i>
map global normal <a-k> <a-n>

# Colemak navigation in goto mode
map global goto n h
map global goto e j
map global goto i k
map global goto o l

# Switch macros to ^
map global normal ^ q
map global normal <a-^> Q

# Switch back by word to q
map global normal q b
map global normal Q B
map global normal <a-q> <a-b>
map global normal <a-Q> <a-B>

# Buffer switching mode
map global buffers k ':buffer-next<ret>' -docstring 'next'
map global buffers K ':buffer-previous<ret>' -docstring 'prev'
map global buffers x ':buffer-only<ret>' -docstring 'only'
map global buffers n ':buffer-first<ret>' -docstring 'first'
map global buffers o ':buffer-last<ret>' -docstring 'last'
map global buffers i ':buffer-by-index ' -docstring 'index'

# Set space to leader key
map global normal <space> ,
map global normal , <space>

# Global clipboard mappings
map -docstring "yank the selection into the clipboard" global user y "<a-|> xsel -i -b<ret>"
map -docstring "paste the clipboard" global user p "<a-!> xsel<ret>"
map -docstring "replace from clipboard" global user r "|xclip -i -selection clipboard<ret>; xclip -o -selection clipboard<ret>"

# X extends up and x extends down
def -params 1 extend-line-down %{
  exec "<a-:>%arg{1}X"
}
def -params 1 extend-line-up %{
  exec "<a-:><a-;>%arg{1}K<a-;>"
    try %{
      exec -draft ';<a-K>\n<ret>'
      exec X
    }
    exec '<a-;><a-X>'
}
map global normal x ': extend-line-down %val{count}<ret>'
map global normal X ': extend-line-up %val{count}<ret>'

# Comment line
map global normal '#' :comment-line<ret>

# Shortcuts to exit
map global user w -docstring 'write' ': w<ret>'
map global user q -docstring 'quit' ': q<ret>'
map global user z -docstring 'write and quit' ': wq<ret>'

# Cycle autocompletions with Tab
hook global InsertCompletionShow .* %{
   try %{
      exec -draft 'h<a-K>\h<ret>'
      map window insert <s-tab> <c-p>
      map window insert <tab> <c-n>
   }
}

hook global InsertCompletionHide .* %{
   unmap window insert <tab> <c-n>
   unmap window insert <s-tab> <c-p>
}

# File types
# ──────────

def filetype-hook -params 2 %{ hook global WinSetOption "filetype=(%arg{1})" %arg{2} }

filetype-hook man %{
remove-highlighter window/number-lines
}

