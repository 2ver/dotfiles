# ──────────────────────────────────
# ■           __  ___   _____  _____
# ■ ■        / / / / | / / _ \/ ___/
# ■ ■ ■     / /_/ /| |/ /  __/ /
# ■ ■ ■ ■   \____/ |___/\___/_/
# ──────────────────────────────────

# Programs
# ────────
super + {Return,b,g,k,p,XF86AudioMute}
   { kitty                                                # Terminal           \
   , qutebrowser                                          # Web browser        \
   , kitty amfora                                         # Gemini browser     \
   , kitty kcr edit                                       # Editor             \
   , kitty htop                                           # Process monitor    \
   , kitty pulsemixer                                     # Audio controller   \
   }

super + {F1,F2,F3,F4,F5,F8}
   { bspc desktop -f ^1 && kitty -o font_size=14 newsboat # RSS reader         \
   , kitty nnn -nR                                        # File manager       \
   , bspc desktop -f ^3 && kitty -o font_size=13 neomutt  # Email client       \
   , bspc desktop -f ^4 && kitty gomuks                   # Matrix client      \
   , pcmanfm                                              # File manager (GUI) \
   , bspc desktop -f ^8 && kitty -o font_size=14 ncmpcpp  # Music client       \
   }

# Used keys: super + [⏎,🕨,b,g,k,F1,F2,F3,F4,F5,F8]

# Rofi
# ────
super + @space
   rofi -matching fuzzy -show run

super + r ; {c,d,e,k}
   { rofi -show calc -modi calc -no-show-match                                 \ 
     -no-sort                                             # Calculator         \
   , rofi-edit                                            # Dotfile picker     \
   , rofimoji                                             # Emoji picker       \
   , sh ~/.local/bin/kaomoji-rofi/kaomoji.sh              # Kaomoji picker     \
   }

super + r ; {p,v,y}
   { rofi -show menu -modi "menu:rofi-power-menu                               \
     --choices=shutdown/reboot/lockscreen/suspend                              \
     --confirm=reboot/shutdown"                           # Power menu         \
   , rofi-rbw                                             # Password vault     \
   , rofi-mpvtube                                         # YT video picker    \
   }

# Used keys: super + r + [␣,c,d,e,k,p,v,y]

# Notifications
# ─────────────
control + {_,shift + ,shift + alt +}@space
   dunstctl {close,close-all,context}

super + control + d
   dunstctl set-paused toggle

# Used keys: [control,super] + [alt,shift] + [␣,d]

# Screenshots
# ───────────
{_,alt,control,shift,} + Print
   { notify-send "Copying selection" && ss-copy-sel \
   , notify-send "Copying screen" && ss-copy-screen \
   , notify-send "Saving selection" && ss-save-sel  \
   , notify-send "Saving screen" && ss-save-screen  \
   }

# Used keys: [control,alt,shift] + PrtSc

# Volume
# ──────
XF86Audio{Mute,LowerVolume,RaiseVolume,Play,Next,Prev}
   { pactl set-sink-mute @DEFAULT_SINK@ toggle \
   , pactl set-sink-volume @DEFAULT_SINK@ -4%  \
   , pactl set-sink-volume @DEFAULT_SINK@ +4%  \
   , playerctl play-pause                      \
   , playerctl next                            \
   , playerctl previous                        \
   }

# Used keys: [🕨,🕩,🕪,⏯,⏮,⏭]

# Brightness
# ──────────
XF86MonBrightness{Up,Down}
   {light -A 10,light -U 10}

# Used keys: [🔅,🔆]

# Info
# ────
# Time
super + z ; t
   notify-send "`date +"%I:%M %a %b %d"`"

# Used keys: super + z + [t]

# Reload/restart/quit
# ───────────────────
super + ctrl + {q,r,Escape}
   { bspc quit                                    \
   , bspc wm -r && notify-send "Restarting bspwm" \
   , notify-send "Restarting sxhkd" &&            \
     pkill -USR1 -x sxhkd
   }

# Used keys: super + ctrl + [⎋,r,q]

# General window management
# ─────────────────────────
# Close/kill window
super + {_,shift + } w
   bspc node -{c,k}

# Toggle maximized
super + m
   bspc desktop -l next

# Send last marked window to last preselection
super + y
   bspc node newest.marked.local -n newest.!automatic.local

# Rotate windows on desktop
super + alt + {_,shift + }r
   bspc node @/ -R {90,270}

# Swap current and largest window
# TODO: Only current desktop
super + control + b
   bspc node -s biggest.window

# Equalize window sizes on current desktop
super + equal
   bspc node @/ -E

# Used keys: super + [alt,control,shift] + [b,e,m,r,w,y]

# States/flags
# ────────────
# Set window state
super + {t,control + p,control + f,f}
   bspc node -t {'~tiled','~pseudo_tiled','~floating','~fullscreen'}

# Set window flags
super + ctrl + {m,x,y,z}
   bspc node -g {marked,locked,sticky,private}

# Used keys: super + [ctrl] + [f,m,p,t,x,y,z]

# Focus/swap windows
# ──────────────────
# Focus window in given direction
super + {_,alt + }{n,Left,e,Down,i,Up,o,Right}
   bspc node -{f,s} {west,west,south,south,north,north,east,east}

# Focus based on path jumps
super + alt + {p,b,comma,period}
   bspc node -f @{parent,brother,first,second}

# Cycle focus of windows
super + {_,shift + }c
   bspc node -f {next,prev}.local.!hidden.window

# Switch desktops
super + bracket{left,right}
   bspc desktop -f {prev,next}.local

# Focus the last window/desktop
# TODO: Figure out how to map `~` instead of tab
super + {grave,Tab}
   bspc {node,desktop} -f last

# Focus/send to desktop
super + {_,alt + }{1-9,0}
   bspc {desktop -f,node -d} '^{1-9,10}' --follow

# TODO: Include this in the previous two lines
super + shift + {1-9,0}
   bspc node -d '^{1-9,10}'

# Used keys: super + [alt,shift] + [←,↓,↑,→,b,e,i,n,o,p,`,↹,1,2,3,4,5,6,7,8,9,0]

# Preselection & movement
# ───────────────────────
# Preselect direction
super + alt + shift + {n,e,i,o,@space}
   bspc node -p {'~west','~south','~north','~east',cancel}

# Preselect ratio
super + alt + shift + {1-9}
   bspc node -o 0.{1-9}

# Cancel preselection for focused desktop
super + alt + space
   bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# Expand window by moving one of its sides outward
super + ctrl + {n,Left,e,Down,i,Up,o,Right}
   n=20; \
   { d1=left;   d2=right;  dx=-$n; dy=0;   \
   , d1=left;   d2=right;  dx=-$n; dy=0;   \
   , d1=bottom; d2=top;    dx=0;   dy=$n;  \
   , d1=bottom; d2=top;    dx=0;   dy=$n;  \
   , d1=top;    d2=bottom; dx=0;   dy=-$n; \
   , d1=top;    d2=bottom; dx=0;   dy=-$n; \
   , d1=right;  d2=left;   dx=$n;  dy=0;   \
   , d1=right;  d2=left;   dx=$n;  dy=0;   \
   } \
   bspc node --resize  $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# Used keys: super + [alt,ctrl,shift] + [␣,←,↓,↑,→,e,i,n,o,1,2,3,4,5,6,7,8,9,0]

# Floating
# ────────
# Move floating window
super + alt + ctrl + {n,Left,e,Down,i,Up,o,Right}
   bspc node -v {-20 0,-20 0,0 20,0 20,0 -20,0 -20,20 0,20 0}

# Contract window by moving one of its side inward
super + ctrl + shift + alt + {n,Left,e,Down,i,Up,o,Right}
   bspc node -z {right -20 0,right -20 0,top 0 20,top 0 20,bottom 0 -20,bottom 0 -20,left 20 0,left 20 0}

# Used keys: super + alt + ctrl + [shift] + [←,↓,↑,→,e,i,n,o]
